데스크탑

cctv_layer_ros 패키지
1. 데스크탑 본체에 두개의 USB webcam 연결.
   >> 연결확인 : 터미널 열고 ls /dev/video* 입력, 카메라 하나 당 두개로 총 4개의 입력이 들어오는지 확인.
2. 터미널에서 cctv 입력
   >> 정상적으로 실행 시 두 개의 CCTV 영상과 하나의 2D map이 새 창으로 열림.
   >> CCTV영상에 딥러닝 적용하여 Boundary box 검출, BBOX의 하단 중앙점(파란 점)을 동적장애물 위치로 판정
   >> Homography transform을 이용하여 영상좌표계에서의 위치(파란점)를 2D 지도평면 좌표(녹색점)로 변환.

===================================================================================================
Intel NUC

공통

1. NUC 전원 케이블 연결 및 전원 ON
2. 1분정도 기다린 뒤 데스크탑의 VNC viewer로 capstone-NUC로 원격접속
3. NUC 접속 후 dmesg|grep tty 명령으로 lidar, arduino, imu가 정상적으로 인식되었는지 확인.
4. 문워커 제어기에 lipo 배터리 연결
   >> 적색등만 켜질 경우 분리 후 다시 연결

# nuc에서 ros 사용하기 전 반드시 데스크탑에서 먼저 roscore나 cctv로 rosmaster를 실행시켜주어야 함.
  >> 두 기기의 ROS 통합을 위해 NUC의 ROS master 주소를 데스크탑으로 지정했기 때문. 


practice 패키지 - only navigation
1. 터미널에 roslaunch practice AGV_bringup2.launch 입력
   >> 마지막 줄에 cmd_vel 관련 문구가 출력되면 ok
2. 새 터미널(ctrl + shift + t) 열고 nav 입력 
   >> Rviz 실행됨.

nav_cctv 패키지 - navigation + cctv layer
1. 터미널에 cctv 입력
   >> Rviz 실행됨.

===================================================================================================
Rviz 기초 사용법
좌측의 여러가지 costmap, Lidar 등의 data 체크박스의 체크 여부는 해당 정보의 시각화 여부를 의미함.
>> 체크시 시각화 출력, 체크 해제시 비활성화
상단의 2D pose estimate는 로봇이 자기 위치를 못잡을 경우 초기 위치 및 초기 방향을 잡아줄때 사용.
>> 버튼 클릭후 원하는 위치에 두고 마우스 왼쪽을 누른 상태로 방향 설정(녹색 화살표)
상단의 2D goal은 로봇이 이동할 목적지 및 최종 방향을 할당함.
>> 버튼 클릭후 원하는 위치에 두고 마우스 왼쪽을 누른상태로 방향 설정(보라색 화살표)
>> goal이 설정되면 즉시 Rviz상에 주행 경로가 생성되며, 해당 global plan을 따라서 주행이 시작됨.
>> 목적지로 로봇이 갈 수없는 경우 로봇이 정지하거나 제자리 회전을 반복하게 됨.


